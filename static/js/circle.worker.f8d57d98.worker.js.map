{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/render.js","WorkArea/circle.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","minLen","toString","slice","constructor","from","test","TypeError","width","height","colorsRed","colorsGreen","generateCircles","text","circles","ctx","OffscreenCanvas","getContext","fontSize","getFontSize","font","getFont","textWidth","getTextWidth","textHeight","xStart","yStart","fillText","createVirtualText","fontSizeForCircles","totalNumber","forBigCircles","generateBigCircles","forSmallCircles","generateSmallCircles","data","getImageData","non","console","log","generate","getCheckBordersText","checkBorders","circle","Math","hypot","x","y","checkBordersCircle","eq","getRedColorOfPixel","measureText","candidate","iterations","Error","getRandomInt","max","floor","random","getRandomFromArray","array","acceptableRadius","colors","counter","color","overlapping","existing","onmessage","event","postMessage"],"mappings":"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","file":"static/js/circle.worker.f8d57d98.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const width = 700;\nexport const height = 700;\n\nconst protection = 50000;\nconst colorsRed = [\"#f49427\", \"#c9785c\", \"#fece00\", \"#f1b181\"];\nconst colorsGreen = [\"#7ba55e\", \"#89b370\", \"#b6c674\"];\n\n// For generate more big circles\nconst generateBigCircles = (fontSize) => {\n    return [fontSize / 20, fontSize / 25, fontSize / 30, fontSize / 35];\n}\n\n// For generate less small circles, its more beautiful, trust\nconst generateSmallCircles = (fontSize) => {\n    return [fontSize / 50, fontSize / 60];\n}\n\nexport const checkBordersCircle = (circle) => {\n    return Math.hypot(circle.x - (width / 2), circle.y - (height / 2)) + circle.r <= (width / 2)\n}\n\nfunction getRedColorOfPixel(data, circle) {\n    return data[(circle.y * (width * 4) + circle.x * 4) + 3];\n}\n\n// Generating all circles in the text and area\nexport function generateCircles(text) {\n    let circles = [];\n\n    let [ctx, fontSize] = createVirtualText(text);\n    let fontSizeForCircles = fontSize;\n    if (text.length <= 2) {\n        fontSizeForCircles = getFontSize(ctx, \"aaa\")\n    }\n\n    //circle size is based on text length, so we need to fix circles number based on the same parameter\n    const totalNumber = text.length * 2000;\n\n    let forBigCircles = generateBigCircles(fontSizeForCircles);\n    let forSmallCircles = generateSmallCircles(fontSizeForCircles);\n\n    let data = ctx.getImageData(0, 0, width, height).data;\n\n    let non = 0;\n    for (let i = 4; i < data.length; i+= 4) {\n        if (data[i] !== 0) non++;\n    }\n    console.log(\"non-zero ref pixels \" + non);\n\n    generate(forBigCircles, colorsGreen, circles, getCheckBordersText(data, false), totalNumber);\n    generate(forSmallCircles, colorsGreen, circles, getCheckBordersText(data, false), totalNumber);\n\n    let checkBorders = (circle) => checkBordersCircle(circle) && getCheckBordersText(data, true)(circle);\n    generate(forBigCircles, colorsRed, circles, checkBorders, totalNumber);\n    generate(forSmallCircles, colorsRed, circles, checkBorders, totalNumber);\n    return circles;\n}\n\nexport function getColorForUnblind(unblind, circle) {\n    return unblind ? (colorsRed.includes(circle.color) ? \"#d98b8b\" : \"#000000\") : circle.color;\n}\n\nfunction getCheckBordersText(data, eq) {\n    return (circle) => {\n        let result = getRedColorOfPixel(data, circle) === 0;\n        return result === eq;\n    };\n}\n\nfunction getFont(fontSize) {\n    return `${fontSize}px Arial`;\n}\n\nfunction createVirtualText(text) {\n    const offscreenCanvas = new OffscreenCanvas(width, height);\n    const ctx = offscreenCanvas.getContext(\"2d\");\n\n    const fontSize = getFontSize(ctx, text);\n    ctx.font = getFont(fontSize);\n\n    let textWidth = getTextWidth(ctx, text);\n    // noinspection JSSuspiciousNameCombination\n    let textHeight = getTextWidth(ctx, \"M\");\n\n    let xStart = (width / 2) - (textWidth / 2);\n    let yStart = (height / 2) + (textHeight / 2);\n    ctx.fillText(text, xStart, yStart);\n    return [ctx, fontSize];\n}\n\nfunction getTextWidth(ctx, text) {\n    return ctx.measureText(text).width;\n}\n\nfunction getFontSize(ctx, text) {\n    let candidate = 5;\n    let iterations = 0;\n    while (true) {\n        if (++iterations > 1000) throw new Error(iterations.toString())\n        ctx.font = getFont(candidate + 1);\n        let textWidth = getTextWidth(ctx, text);\n        let textHeight = getTextWidth(ctx, \"M\");\n        let xStart = (width / 2) - (textWidth / 2);\n        let yStart = (height / 2) + (textHeight / 2);\n\n        if (Math.hypot((width / 2) - xStart, (height / 2) - yStart) > width / 2) {\n            return candidate;\n        }\n        candidate = candidate + 1;\n    }\n}\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nfunction getRandomFromArray(array) {\n    return array[getRandomInt(array.length)]\n}\n\n/**\n *\n * @param {Array<*>} acceptableRadius - array of possible radius depends of text size\n * @param {Array<string>} colors - array of possible colors\n * @param {Array<*>} circles - collect all circles in general array\n * @param {function(any): boolean} checkBorders - checking that the circles fit into the text\n * @param {number} totalNumber - how many circles will there be in the final drawing\n */\nexport const generate = (acceptableRadius, colors, circles, checkBorders, totalNumber) => {\n    let counter = 0;\n\n    // populate circles array\n    // brute force method continues until # of circles target is reached\n    // or until the protection value is reached\n    while (circles.length < totalNumber && counter < protection) {\n        let circle = {\n            x: getRandomInt(width),\n            y: getRandomInt(height),\n            r: getRandomFromArray(acceptableRadius),\n            color: getRandomFromArray(colors)\n        };\n        let overlapping = false;\n\n        if (!checkBorders(circle)) {\n            overlapping = true;\n        } else {\n            for (let i = 0; i < circles.length; i++) {\n                const existing = circles[i];\n                const distance = Math.hypot(circle.x - existing.x, circle.y - existing.y);\n                if (distance < circle.r + existing.r + 1) {\n                    // They are overlapping\n                    overlapping = true;\n                    // do not add to array\n                    break;\n                }\n            }\n        }\n\n        // add valid circles to array\n        if (!overlapping) {\n            circles.push(circle);\n        }\n\n        counter++;\n    }\n}\n\n","import {generateCircles} from \"../utils/render\";\n\nonmessage = (event) => {\n    const {text} = event.data;\n    let circles = generateCircles(text);\n    postMessage({\n        circles\n    });\n};\n"],"sourceRoot":""}